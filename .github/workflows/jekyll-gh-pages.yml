# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Provide easy redirect to repo
        run: |
          # Figure out narrower permissions than 777 at some point; +w isn't working on its own...
          sudo chmod 777 -R ./_site/
          sudo echo "<html><head><meta http-equiv='refresh' content='0; URL=${{github.server_url}}/${{github.repository}}' /></head><body>Redirecting to repository</body></html>" > ./_site/github.html
      - name: GitInspector
        run: |
          git clone https://github.com/jpwhite3/gitinspector.git
          # git clone ${{github.server_url}}/${{github.repository}} original-src/
          # -f ipynb,html,md,txt,json,xml,png,graphviz,css,tsx,ts
          # python ./gitinspector/gitinspector.py ./original-src/ --grading -x ./gitinspector -x ./_site > ./_site/git_report.html
          python ./gitinspector/gitinspector.py ./ -f md,json,txt,yaml,csv,html,py,ipynb,png,graphviz,css,tsx,ts,js,jsx -F html --grading -x ./gitinspector > ./_site/git_report.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
